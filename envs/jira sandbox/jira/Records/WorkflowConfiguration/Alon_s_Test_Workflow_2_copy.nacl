jira.WorkflowConfiguration Alon_s_Test_Workflow_2_copy@tssss {
  scope = {
    type = "GLOBAL"
  }
  name = "Alon's Test Workflow 2 copy"
  description = "desc"
  isEditable = true
  statuses = [
    {
      statusReference = jira.Status.instance.a_shared_status3@s
      properties = [
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
      deprecated = false
      name = "A shared status"
    },
    {
      statusReference = jira.Status.instance.approved
      properties = [
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
      deprecated = false
      name = "Approved"
    },
    {
      statusReference = jira.Status.instance.build_broken@s
      properties = [
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
      deprecated = false
      name = "Build Broken"
    },
    {
      statusReference = jira.Status.instance.open
      properties = [
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
      deprecated = false
      name = "Open"
    },
  ]
  transitions = {
    Create__From__none__Initial@fffsff = {
      type = "INITIAL"
      to = {
        statusReference = jira.Status.instance.open
      }
      name = "Create"
      description = ""
      actions = [
        {
          ruleKey = "system:update-field"
          parameters = {
            field = jira.Field.instance.Environment__string
          }
        },
        {
          ruleKey = "system:copy-value-from-other-field"
          parameters = {
            sourceFieldKey = jira.Field.instance.Assignee__user
            targetFieldKey = jira.Field.instance.Creator__user
            issueSource = "PARENT"
          }
        },
        {
          ruleKey = "system:set-security-level-from-role"
          parameters = {
            roleId = jira.ProjectRole.instance.Administrators
            issueSecurityLevelId = "none"
          }
        },
        {
          ruleKey = "system:update-field"
          parameters = {
            field = jira.Field.instance.Approvers__multiuserpicker__c
            value = "ww"
            mode = "replace"
          }
        },
        {
          ruleKey = "system:change-assignee"
          parameters = {
            type = "to-unassigned"
          }
        },
        {
          ruleKey = "connect:remote-workflow-function"
          parameters = {
            appKey = "com.onresolve.jira.groovy.groovyrunner__script-postfunction"
            id = "cc48f8bb-12d1-4a1e-9ebc-cc1f323e6287"
            disabled = "false"
          }
        },
        {
          ruleKey = "system:change-assignee"
          parameters = {
            type = "to-current-user"
          }
        },
        {
          ruleKey = "system:change-assignee"
          parameters = {
            type = "to-lead"
          }
        },
        {
          ruleKey = "system:change-assignee"
          parameters = {
            type = "to-reporter"
          }
        },
        {
          ruleKey = "system:unsupported"
          parameters = {
            class.name = "com.atlassian.jira.workflow.function.issue.IssueStoreFunction"
            full.module.key = "com.atlassian.jira.plugin.system.workflowissue-store-function"
          }
        },
      ]
      validators = [
        {
          ruleKey = "system:check-permission-validator"
          parameters = {
            permissionKey = "CREATE_ISSUES"
          }
        },
      ]
      properties = [
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    }
    Build_Broken__From__any_status__Global@sfffssff = {
      type = "GLOBAL"
      to = {
        statusReference = jira.Status.instance.build_broken@s
      }
      name = "Build Broken"
      description = "a"
      properties = [
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    }
    TransitionToShared__From__A_shared_status_Approved__Directed@fffssszdff = {
      type = "DIRECTED"
      from = [
        {
          statusReference = jira.Status.instance.approved
        },
        {
          statusReference = jira.Status.instance.a_shared_status3@s
        },
      ]
      to = {
        statusReference = jira.Status.instance.build_broken@s
      }
      name = "TransitionToShared"
      description = ""
      actions = [
        {
          ruleKey = "connect:remote-workflow-function"
          parameters = {
            appKey = "com.innovalog.jmwe.jira-misc-workflow-extensions__DeleteIssueFunction"
            config = "{\"conditionalExecution\":false,\"_modified\":\"2022-11-08T09:29:52.846Z\",\"runAs\":\"\",\"runAsType\":\"addonUser\"}"
            id = "ab0f2578-37d3-4cb9-9106-cbc90e27ac85"
            disabled = "false"
          }
        },
        {
          ruleKey = "connect:remote-workflow-function"
          parameters = {
            appKey = "com.onresolve.jira.groovy.groovyrunner__script-postfunction"
            id = "30291ba2-c9bb-469c-9301-899e91274f45"
            disabled = "false"
          }
        },
      ]
      validators = [
        {
          ruleKey = "system:validate-field-value"
          parameters = {
            ruleType = "dateFieldComparison"
            date1FieldKey = jira.Field.instance.Change_completion_date__datetime__c@ssuuuu
            date2FieldKey = jira.Field.instance.Change_completion_date__datetime__c@ssuuuu
            includeTime = "false"
            conditionSelected = ">"
          }
        },
        {
          ruleKey = "system:validate-field-value"
          parameters = {
            ruleType = "fieldHasSingleValue"
            fieldKey = jira.Field.instance.Creator__user
            excludeSubtasks = "true"
          }
        },
        {
          ruleKey = "system:validate-field-value"
          parameters = {
            ruleType = "fieldHasSingleValue"
            fieldKey = jira.Field.instance.Last_Viewed__datetime@suu
            excludeSubtasks = "false"
          }
        },
        {
          ruleKey = "system:validate-field-value"
          parameters = {
            ruleType = "fieldRequired"
            fieldsRequired = [
              jira.Field.instance.Assignee__user,
              jira.Field.instance.Change_type__select__c@suuuu,
            ]
            ignoreContext = "true"
            errorMessage = "wwww"
          }
        },
        {
          ruleKey = "system:parent-or-child-blocking-validator"
          parameters = {
            blocker = "PARENT"
            statusIds = [
              jira.Status.instance.in_progress@s,
            ]
          }
        },
        {
          ruleKey = "system:check-permission-validator"
          parameters = {
            permissionKey = "MODIFY_REPORTER"
          }
        },
        {
          ruleKey = "system:previous-status-validator"
          parameters = {
            previousStatusIds = jira.Status.instance.build_broken@s
            mostRecentStatusOnly = "false"
          }
        },
        {
          ruleKey = "system:validate-field-value"
          parameters = {
            ruleType = "fieldMatchesRegularExpression"
            regexp = "aaa"
            fieldKey = jira.Field.instance.Epic_Status__gh_epic_status__c@suubbuu
          }
        },
        {
          ruleKey = "system:unsupported"
          parameters = {
            class.name = "com.atlassian.jira.workflow.validator.UserPermissionValidator"
            nullallowed = "true"
            permissionKey = "VIEW_DEV_TOOLS"
            vars.key = "aaa"
          }
        },
        {
          ruleKey = "system:validate-field-value"
          parameters = {
            ruleType = "windowDateComparison"
            date1FieldKey = jira.Field.instance.Change_completion_date__datetime__c@ssuuuu
            date2FieldKey = jira.Field.instance.Change_completion_date__datetime__c@ssuuuu
            numberOfDays = "2"
          }
        },
      ]
      conditions = {
        operation = "ALL"
        conditions = [
          {
            ruleKey = "system:restrict-from-all-users"
            parameters = {
              restrictMode = "usersAndAPI"
            }
          },
        ]
      }
      triggers = [
        {
          ruleKey = "system:development-triggers"
          parameters = {
            enabledTriggers = [
              "commit-created-trigger",
              "pull-request-created-trigger",
            ]
          }
        },
      ]
      transitionScreen = {
        ruleKey = "system:transition-screen"
        parameters = {
          screenId = jira.Screen.instance.JAM__Kanban_Bug_Screen@fsss
        }
      }
      properties = [
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    }
  }
}
