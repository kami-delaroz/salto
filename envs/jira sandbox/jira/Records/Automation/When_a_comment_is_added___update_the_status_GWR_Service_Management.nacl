jira.Automation When_a_comment_is_added___update_the_status_GWR_Service_Management@sssss_08594sssuss {
  name = "When a comment is added → update the status"
  state = "ENABLED"
  authorAccountId = {
    id = "61980f073618cd006f48823b"
    displayName = "Geoffrey Routledge"
  }
  actor = {
    type = "ACCOUNT_ID"
    value = {
      id = "61980f073618cd006f48823b"
      displayName = "Geoffrey Routledge"
    }
  }
  trigger = {
    component = "TRIGGER"
    schemaVersion = 1
    type = "jira.issue.event.trigger:commented"
    value = {
      eventKey = "jira:issue_updated"
      issueEvent = "issue_commented"
      eventTypes = [
        "PRIMARY_ACTION",
      ]
    }
    children = [
    ]
    conditions = [
    ]
  }
  components = [
    {
      component = "CONDITION"
      schemaVersion = 1
      type = "jira.comparator.condition"
      value = {
        first = "{{${ jira.Field.instance.Comment__comments_page@uub }.internal}}"
        second = "false"
        operator = "EQUALS"
      }
      children = [
      ]
      conditions = [
      ]
    },
    {
      component = "CONDITION"
      schemaVersion = -1
      type = "jira.condition.container.block"
      children = [
        {
          component = "CONDITION_BLOCK"
          schemaVersion = 1
          type = "jira.condition.if.block"
          value = {
            conditionMatchType = "ALL"
          }
          children = [
            {
              component = "ACTION"
              schemaVersion = 10
              type = "jira.issue.transition"
              value = {
                operations = [
                ]
                sendNotifications = true
                destinationStatus = {
                  type = "NAME"
                  value = jira.Status.instance.waiting_for_customer@s.name
                }
              }
              children = [
              ]
              conditions = [
              ]
            },
          ]
          conditions = [
            {
              component = "CONDITION"
              schemaVersion = 4
              type = "jira.user.condition"
              value = {
                conditions = [
                  {
                    field = "initiator"
                    check = "IN_ROLE"
                    criteria = [
                      {
                        type = "NAME"
                        value = "Service Desk Team"
                      },
                    ]
                  },
                ]
                operator = "AND"
              }
              children = [
              ]
              conditions = [
              ]
            },
            {
              component = "CONDITION"
              schemaVersion = 3
              type = "jira.issue.condition"
              value = {
                selectedField = {
                  type = "ID"
                  value = jira.Field.instance.Status__status
                }
                selectedFieldType = "status"
                comparison = "EQUALS"
                compareFieldValue = {
                  type = "NAME"
                  value = jira.Status.instance.waiting_for_support@s.name
                  multiValue = false
                }
              }
              children = [
              ]
              conditions = [
              ]
            },
          ]
        },
        {
          component = "CONDITION_BLOCK"
          schemaVersion = 1
          type = "jira.condition.if.block"
          value = {
            conditionMatchType = "ALL"
          }
          children = [
            {
              component = "ACTION"
              schemaVersion = 10
              type = "jira.issue.transition"
              value = {
                operations = [
                ]
                sendNotifications = true
                destinationStatus = {
                  type = "NAME"
                  value = jira.Status.instance.waiting_for_support@s.name
                }
              }
              children = [
              ]
              conditions = [
              ]
            },
          ]
          conditions = [
            {
              component = "CONDITION"
              schemaVersion = 4
              type = "jira.user.condition"
              value = {
                conditions = [
                  {
                    field = "initiator"
                    check = "NOT_IN_ROLE"
                    criteria = [
                      {
                        type = "NAME"
                        value = "Service Desk Team"
                      },
                    ]
                  },
                ]
                operator = "AND"
              }
              children = [
              ]
              conditions = [
              ]
            },
            {
              component = "CONDITION"
              schemaVersion = 3
              type = "jira.issue.condition"
              value = {
                selectedField = {
                  type = "ID"
                  value = jira.Field.instance.Status__status
                }
                selectedFieldType = "status"
                comparison = "EQUALS"
                compareFieldValue = {
                  type = "NAME"
                  value = jira.Status.instance.waiting_for_customer@s.name
                  multiValue = false
                }
              }
              children = [
              ]
              conditions = [
              ]
            },
          ]
        },
      ]
      conditions = [
      ]
    },
  ]
  canOtherRuleTrigger = false
  notifyOnError = "FIRSTERROR"
  projects = [
    {
      projectId = jira.Project.instance.GWR_Service_Management@s
    },
  ]
  labels = [
  ]
  tags = [
    {
      tagType = "CREATION_TYPE"
      tagValue = "AUTO"
    },
    {
      tagType = "SAMPLE_RULE"
      tagValue = "service_desk"
    },
    {
      tagType = "TEMPLATE_ID"
      tagValue = "itsm_template_6"
    },
  ]
  ruleHome = {
    ruleLifecycleHome = {
      locationARI = "ari:cloud:jira:cc55e2a7-7908-4b67-ad90-b8c78de0e9ad:project/10202"
    }
    ruleBillingHome = {
      locationARI = "ari:cloud:jira-servicedesk::site/cc55e2a7-7908-4b67-ad90-b8c78de0e9ad"
    }
  }
  writeAccessType = "UNRESTRICTED"
  collaborators = [
  ]
  billingType = "SYSTEM"
  _alias = "When a comment is added → update the status"
}
